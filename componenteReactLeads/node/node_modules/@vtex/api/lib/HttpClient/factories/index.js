"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HttpClient_1 = require("../HttpClient");
const typings_1 = require("../typings");
exports.rootURL = (service, { region }, { baseURL }) => {
    if (baseURL) {
        return 'http://' + baseURL;
    }
    if (region) {
        return `http://${service}.${region}.vtex.io`;
    }
    throw new Error('Missing required: should specify either {region} or {baseURL}');
};
exports.workspaceURL = (service, context, opts) => {
    const { account, workspace } = context;
    if (!account || !workspace) {
        throw new Error('Missing required arguments: {account, workspace}');
    }
    return exports.rootURL(service, context, opts) + `/${account}/${workspace}`;
};
exports.forWorkspace = (service, context, opts) => {
    const baseURL = exports.workspaceURL(service, context, opts);
    return new HttpClient_1.HttpClient(Object.assign({}, context, opts, { authType: typings_1.AuthType.bearer, baseURL }));
};
exports.forRoot = (service, context, opts) => {
    const baseURL = exports.rootURL(service, context, opts);
    return new HttpClient_1.HttpClient(Object.assign({}, context, opts, { authType: typings_1.AuthType.bearer, baseURL }));
};
exports.forExternal = (baseURL, context, opts) => {
    return new HttpClient_1.HttpClient(Object.assign({}, context, opts, { baseURL }));
};
