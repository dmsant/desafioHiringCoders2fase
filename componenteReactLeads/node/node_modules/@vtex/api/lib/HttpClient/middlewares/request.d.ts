import { Limit } from 'p-limit';
import { MiddlewareContext } from '../typings';
export declare const defaultsMiddleware: (baseURL: string | undefined, rawHeaders: Record<string, string>, params: Record<string, string> | undefined, timeout: number, retries?: number | undefined, verbose?: boolean | undefined) => (ctx: MiddlewareContext, next: () => Promise<void>) => Promise<void>;
export declare const routerCacheMiddleware: (ctx: MiddlewareContext, next: () => Promise<void>) => Promise<void>;
export declare const requestMiddleware: (limit?: Limit | undefined) => (ctx: MiddlewareContext, next: () => Promise<void>) => Promise<void>;
export declare function httpAgentStats(): {
    freeSockets: number;
    freeSocketsPerOrigin: Record<string, number>;
    pendingRequests: number;
    pendingRequestsPerOrigin: Record<string, number>;
    sockets: number;
    socketsPerOrigin: Record<string, number>;
};
