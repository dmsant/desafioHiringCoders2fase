import { ExternalClient, InstanceOptions } from '../HttpClient';
import { IOContext } from '../service/typings';
export declare class ID extends ExternalClient {
    constructor(context: IOContext, opts?: InstanceOptions);
    getTemporaryToken: () => Promise<string>;
    sendCodeToEmail: (token: string, email: string) => Promise<any>;
    getEmailCodeAuthenticationToken: (token: string, email: string, code: string) => Promise<AuthenticationResponse>;
    getPasswordAuthenticationToken: (token: string, email: string, password: string) => Promise<AuthenticationResponse>;
}
export interface AuthenticationResponse {
    promptMFA: boolean;
    clientToken: any;
    authCookie: {
        Name: string;
        Value: string;
    };
    accountAuthCookie: any;
    expiresIn: number;
    userId: string;
    phoneNumber: string;
    scope: any;
}
