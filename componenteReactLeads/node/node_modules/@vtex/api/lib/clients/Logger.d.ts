import { InfraClient, InstanceOptions } from '../HttpClient';
import { IOContext } from '../service/typings';
export declare enum LogLevel {
    Debug = "debug",
    Info = "info",
    Warn = "warn",
    Error = "error"
}
export declare class Logger extends InfraClient {
    private logger;
    constructor(context: IOContext, options?: InstanceOptions);
    debug: (message: any, subject?: string) => Promise<void>;
    info: (message: any, subject?: string) => Promise<void>;
    warn: (warning: any, subject?: string) => Promise<void>;
    error: (error: any, subject?: string) => Promise<void>;
    sendLog: (_: string, message: any, level: LogLevel) => Promise<void>;
}
export interface ErrorLog {
    code: string;
    message: string;
    response?: {
        status: number;
        data: string;
        headers: Record<string, string>;
    };
    [key: string]: any;
}
