import { InfraClient, InstanceOptions } from '../HttpClient';
import { IOContext } from '../service/typings';
export declare class Router extends InfraClient {
    constructor(ioContext: IOContext, opts?: InstanceOptions);
    listAvailableIoVersions: () => Promise<AvaiableIO[]>;
    getInstalledIoVersion: () => Promise<AvaiableIO>;
    installIo: (version: string) => Promise<void>;
    listAvailableServices: () => Promise<AvailableServices>;
    getAvailableVersions: (name: string) => Promise<AvailableServiceVersions>;
    listInstalledServices: () => Promise<InstalledService[]>;
    installService: (name: string, version: string) => Promise<void>;
}
export interface AvaiableIO {
    version: string;
    tested: boolean;
    services: {
        [service: string]: string;
    };
}
export declare type InstalledIO = AvaiableIO;
export interface AvailableServiceVersions {
    versions: {
        [region: string]: string[];
    };
}
export interface AvailableServices {
    [service: string]: AvailableServiceVersions;
}
export interface InstalledService {
    name: string;
    version: string;
    serviceIsolation: number;
}
