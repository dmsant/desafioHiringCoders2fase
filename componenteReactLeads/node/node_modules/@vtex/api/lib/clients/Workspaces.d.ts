import { InfraClient, InstanceOptions } from '../HttpClient';
import { IOContext } from '../service/typings';
export declare class Workspaces extends InfraClient {
    constructor(context: IOContext, options?: InstanceOptions);
    list: (account: string) => Promise<WorkspaceMetadata[]>;
    get: (account: string, workspace: string) => Promise<WorkspaceMetadata>;
    set: (account: string, workspace: string, metadata: Partial<WorkspaceMetadata>) => Promise<void>;
    create: (account: string, workspace: string, production: boolean) => Promise<void>;
    delete: (account: string, workspace: string) => Promise<import("../HttpClient").IOResponse<void>>;
    reset: (account: string, workspace: string, metadata?: Partial<WorkspaceMetadata>) => Promise<void>;
    promote: (account: string, workspace: string) => Promise<void>;
}
export interface WorkspaceMetadata {
    name: string;
    weight: number;
    production: boolean;
}
