"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ramda_1 = require("ramda");
const clients_1 = require("../http/middlewares/clients");
const error_1 = require("../http/middlewares/error");
const timings_1 = require("../http/middlewares/timings");
const compose_1 = require("../utils/compose");
exports.createEventHandler = (Clients, options) => {
    return (handler) => {
        const middlewares = Array.isArray(handler) ? handler : [handler];
        const pipeline = [clients_1.clients(Clients, options), timings_1.timings, error_1.error, contextAdapter(middlewares)];
        return compose_1.composeForEvents(pipeline);
    };
};
function contextAdapter(middlewares) {
    return async function middlewareCascade(ctx) {
        const ctxEvent = ramda_1.merge(ramda_1.pick(['clients', 'state', 'vtex', 'timings', 'metrics'], ctx), Object.assign({}, ctx.vtex, { body: ctx.state.body, key: ctx.vtex.eventInfo ? ctx.vtex.eventInfo.key : '', sender: ctx.vtex.eventInfo ? ctx.vtex.eventInfo.sender : '', subject: ctx.vtex.eventInfo ? ctx.vtex.eventInfo.subject : '' }));
        await compose_1.composeForEvents(middlewares)(ctxEvent);
        ctx.status = 204;
    };
}
