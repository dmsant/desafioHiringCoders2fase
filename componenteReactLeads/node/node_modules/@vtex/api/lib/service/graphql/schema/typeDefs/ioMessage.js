"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const apollo_server_core_1 = require("apollo-server-core");
const graphql_1 = require("graphql");
const serialize = (ctx) => async (inputArgs) => {
    const args = typeof inputArgs === 'string' ? { content: inputArgs, description: '', from: undefined, id: inputArgs } : inputArgs;
    const { content, from } = args;
    const { translationsLoader, getLocaleTo } = ctx;
    const to = await getLocaleTo();
    // If the message is already in the target locale, return the content.
    if (!to || from === to) {
        return content;
    }
    return await translationsLoader.load(Object.assign({}, args, { from,
        to }));
};
const parseValue = (_) => {
    throw new apollo_server_core_1.ApolloError('You cannot use IOMessage as input value', 'INVALID_INPUT_MESSAGE');
};
exports.resolvers = (ctx) => new graphql_1.GraphQLScalarType({
    description: 'Internationalizeable String',
    name: 'IOMessage',
    parseLiteral(ast) {
        switch (ast.kind) {
            case graphql_1.Kind.STRING:
                return ast.value;
            default:
                return null;
        }
    },
    parseValue,
    serialize: serialize(ctx),
});
