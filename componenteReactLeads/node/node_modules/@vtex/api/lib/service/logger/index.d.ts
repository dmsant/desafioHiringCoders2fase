import { IOContext } from '../../service/typings';
export declare enum LogLevel {
    Debug = "debug",
    Info = "info",
    Warn = "warn",
    Error = "error"
}
export declare class Logger {
    private account;
    private workspace;
    private operationId;
    private requestId;
    private production;
    private executed;
    constructor(ctx: Pick<IOContext, 'account' | 'workspace' | 'requestId' | 'operationId' | 'production'>);
    debug: (message: any) => void;
    info: (message: any) => void;
    warn: (warning: any) => void;
    error: (error: any) => void;
    log: (message: any, level: LogLevel) => void;
    private isThirdPartyApp;
    /**
     * Logs splunk query so the developer can search for the errors in splunk.
     * This function runs only once in the lifetime of the Logger class so we
     * don't mess up with the developer's terminal
     */
    private logSplunkQuery;
}
